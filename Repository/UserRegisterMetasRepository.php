<?php

namespace Eccube\Repository;

use Doctrine\ORM\EntityRepository;
use Plugin\KrAkiCustomizer\Common\Constants;

/**
 * UserRegisterMetasRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRegisterMetasRepository extends EntityRepository
{
    public function create($app, $customerId)
    {
        try {
            $registerIp = $this->getCLientIp();

            if (!$this->checkRegisterConditions($registerIp, $app)) {
                return false;
            }

            $userMetas = new \Eccube\Entity\UserRegisterMetas();

            $userMetas->setCustomerId($customerId);
            $userMetas->setStatus(true);
            $userMetas->setUserAgent($this->getUserAgent());
            $userMetas->setUserIp($registerIp);
            $userMetas->setCreatedAt(new \DateTime());

            $app['orm.em']->persist($userMetas);
            $app['orm.em']->flush();

            return true;
        } catch (\Exception $th) {
            return false;
        }
    }

    private function getCLientIp()
    {
        $clientIP = isset($_SERVER['HTTP_CLIENT_IP'])
            ? $_SERVER['HTTP_CLIENT_IP']
            : isset($_SERVER['HTTP_X_FORWARDED_FOR'])
            ? $_SERVER['HTTP_X_FORWARDED_FOR']
            : $_SERVER['REMOTE_ADDR'];

        if ($clientIP) {
            return $clientIP;
        }

        throw new \Exception("Can't get IP");
    }

    private function getUserAgent()
    {
        return isset($_SERVER['HTTP_USER_AGENT']) ? $_SERVER['HTTP_USER_AGENT'] : "";
    }

    private function checkRegisterConditions($regiserIp, $app)
    {
        $pdo  = $app['orm.em']->getConnection();
        $sql  = "SELECT * FROM `user_register_metas` where Date(created_at) = CURDATE() and user_ip = '{$regiserIp}'";
        $stmt = $pdo->prepare($sql);
        $stmt->execute();

        $result               = $stmt->fetchAll();
        $allowRegiterInDay    = Constants::ALLOW_REGISTER_A_DAY;
        $countIpRegisterInDay = count($result);

        // Check Register of the IP in 24 hour
        if ($countIpRegisterInDay >= $allowRegiterInDay) {
            return false;
        }

        return true;
    }
}
